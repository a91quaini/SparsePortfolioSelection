% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/sparse_mve_sqsr.R
\name{sparse_mve_sqsr}
\alias{sparse_mve_sqsr}
\title{Compute Highest Square Sharpe Ratio with Cardinality Constraint}
\usage{
sparse_mve_sqsr(mu, sigma, max_card, greedy_perc, do_checks = FALSE)

sparse_mve_sqsr(mu, sigma, max_card, greedy_perc, do_checks = FALSE)
}
\arguments{
\item{mu}{Mean vector}

\item{sigma}{Coveriance matrix}

\item{max_card}{Maximum cardinality to consider (from 1 up to the number of assets)}

\item{greedy_perc}{If less than 1, the fraction of combinations to evaluate for each cardinality;
if 1 or greater, all combinations are evaluated}

\item{do_checks}{Logical flag indicating whether to perform input checks (default = FALSE)}
}
\value{
A list with \code{sqsr} (the optimal square Sharpe ratio) and \code{selection} (the asset indices of the optimal selection).

A list with \code{sqsr} (the optimal square Sharpe ratio) and \code{selection} (the asset indices of the optimal selection)
}
\description{
This function takes as inputs the mean vector \code{mu}, the covariance matrix \code{sigma},
the maximum active portfolio cardinality \code{max_card},
and the fraction of combinations to evaluate \code{greedy_perc}.
With these inputs, it searches over all combinations of assets with cardinality from 1 up to \code{max_card}
and computes the square Sharpe ratio defined as
\eqn{\mu^T \, \sigma^{-1}\, \mu}.
It returns the highest square Sharpe ratio found along with the associated asset selection.
If \code{greedy_perc} is less than 1, then for each cardinality the search is performed over a random
subset (a fraction equal to \code{greedy_perc}) of all possible combinations.

This function takes as inputs the mean vector \code{mu}, the covariance matrix \code{sigma},
the maximum active portfolio cardinality \code{max_card},
and the fraction of combinations to evaluate \code{greedy_perc}.
With these inputs, it searches over all combinations of assets with cardinality from 1 up to \code{max_card}
and computes the square Sharpe ratio defined as
\eqn{\mu^T \, \sigma^{-1}\, \mu}.
It returns the highest square Sharpe ratio found along with the associated asset selection
If \code{greedy_perc} is less than 1, then for each cardinality the search is performed over a random
subset (a fraction equal to \code{greedy_perc}) of all possible combinations.
}
\examples{
# Consider a portfolio with 4 assets
mu <- c(0.1, 0.2, 0.15, 0.12)
sigma <- matrix(c(0.01, 0.002, 0.001, 0.0005,
                  0.002, 0.02, 0.0015, 0.001,
                  0.001, 0.0015, 0.015, 0.0007,
                  0.0005, 0.001, 0.0007, 0.012), nrow = 4, byrow = TRUE)
result <- sparse_mve_sqsr(mu = mu, sigma = sigma, max_card = 2, greedy_perc = 1.0, do_checks = TRUE)
}
